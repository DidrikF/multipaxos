// Code generated by protoc-gen-go.
// source: kv.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	kv.proto

It has these top-level messages:
	InsertRequest
	InsertResponse
	LookupRequest
	LookupResponse
	KeysRequest
	KeysResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type InsertRequest struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *InsertRequest) Reset()                    { *m = InsertRequest{} }
func (m *InsertRequest) String() string            { return proto1.CompactTextString(m) }
func (*InsertRequest) ProtoMessage()               {}
func (*InsertRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InsertRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *InsertRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type InsertResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *InsertResponse) Reset()                    { *m = InsertResponse{} }
func (m *InsertResponse) String() string            { return proto1.CompactTextString(m) }
func (*InsertResponse) ProtoMessage()               {}
func (*InsertResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InsertResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type LookupRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *LookupRequest) Reset()                    { *m = LookupRequest{} }
func (m *LookupRequest) String() string            { return proto1.CompactTextString(m) }
func (*LookupRequest) ProtoMessage()               {}
func (*LookupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LookupRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type LookupResponse struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *LookupResponse) Reset()                    { *m = LookupResponse{} }
func (m *LookupResponse) String() string            { return proto1.CompactTextString(m) }
func (*LookupResponse) ProtoMessage()               {}
func (*LookupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LookupResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type KeysRequest struct {
}

func (m *KeysRequest) Reset()                    { *m = KeysRequest{} }
func (m *KeysRequest) String() string            { return proto1.CompactTextString(m) }
func (*KeysRequest) ProtoMessage()               {}
func (*KeysRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type KeysResponse struct {
	Keys []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (m *KeysResponse) Reset()                    { *m = KeysResponse{} }
func (m *KeysResponse) String() string            { return proto1.CompactTextString(m) }
func (*KeysResponse) ProtoMessage()               {}
func (*KeysResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *KeysResponse) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func init() {
	proto1.RegisterType((*InsertRequest)(nil), "proto.InsertRequest")
	proto1.RegisterType((*InsertResponse)(nil), "proto.InsertResponse")
	proto1.RegisterType((*LookupRequest)(nil), "proto.LookupRequest")
	proto1.RegisterType((*LookupResponse)(nil), "proto.LookupResponse")
	proto1.RegisterType((*KeysRequest)(nil), "proto.KeysRequest")
	proto1.RegisterType((*KeysResponse)(nil), "proto.KeysResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for KeyValueService service

type KeyValueServiceClient interface {
	Insert(ctx context.Context, in *InsertRequest, opts ...grpc.CallOption) (*InsertResponse, error)
	Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error)
	Keys(ctx context.Context, in *KeysRequest, opts ...grpc.CallOption) (*KeysResponse, error)
}

type keyValueServiceClient struct {
	cc *grpc.ClientConn
}

func NewKeyValueServiceClient(cc *grpc.ClientConn) KeyValueServiceClient {
	return &keyValueServiceClient{cc}
}

func (c *keyValueServiceClient) Insert(ctx context.Context, in *InsertRequest, opts ...grpc.CallOption) (*InsertResponse, error) {
	out := new(InsertResponse)
	err := grpc.Invoke(ctx, "/proto.KeyValueService/Insert", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyValueServiceClient) Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error) {
	out := new(LookupResponse)
	err := grpc.Invoke(ctx, "/proto.KeyValueService/Lookup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keyValueServiceClient) Keys(ctx context.Context, in *KeysRequest, opts ...grpc.CallOption) (*KeysResponse, error) {
	out := new(KeysResponse)
	err := grpc.Invoke(ctx, "/proto.KeyValueService/Keys", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for KeyValueService service

type KeyValueServiceServer interface {
	Insert(context.Context, *InsertRequest) (*InsertResponse, error)
	Lookup(context.Context, *LookupRequest) (*LookupResponse, error)
	Keys(context.Context, *KeysRequest) (*KeysResponse, error)
}

func RegisterKeyValueServiceServer(s *grpc.Server, srv KeyValueServiceServer) {
	s.RegisterService(&_KeyValueService_serviceDesc, srv)
}

func _KeyValueService_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyValueServiceServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.KeyValueService/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyValueServiceServer).Insert(ctx, req.(*InsertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyValueService_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyValueServiceServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.KeyValueService/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyValueServiceServer).Lookup(ctx, req.(*LookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KeyValueService_Keys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeyValueServiceServer).Keys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.KeyValueService/Keys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeyValueServiceServer).Keys(ctx, req.(*KeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KeyValueService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.KeyValueService",
	HandlerType: (*KeyValueServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Insert",
			Handler:    _KeyValueService_Insert_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _KeyValueService_Lookup_Handler,
		},
		{
			MethodName: "Keys",
			Handler:    _KeyValueService_Keys_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kv.proto",
}

func init() { proto1.RegisterFile("kv.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x1b, 0xfb, 0xc7, 0x76, 0x34, 0x55, 0xc6, 0x0a, 0xa1, 0x27, 0x9d, 0x83, 0x14, 0x0f,
	0x05, 0xf5, 0xd0, 0x67, 0x90, 0x7a, 0x8a, 0xe0, 0x5d, 0xc3, 0x1c, 0x24, 0xd2, 0x8d, 0x99, 0x6c,
	0x60, 0x5f, 0xcc, 0xe7, 0x93, 0xfd, 0x17, 0xba, 0x82, 0xa7, 0xdd, 0xf9, 0x98, 0xdf, 0xcc, 0xf7,
	0x0d, 0xcc, 0xeb, 0x7e, 0xdb, 0xb4, 0xaa, 0x53, 0x38, 0x75, 0x0f, 0xed, 0x20, 0x7f, 0x3e, 0x08,
	0xb7, 0x5d, 0xc9, 0xdf, 0x9a, 0xa5, 0xc3, 0x4b, 0x18, 0xd7, 0x6c, 0x8a, 0xec, 0x26, 0xdb, 0x2c,
	0x4a, 0xfb, 0xc5, 0x15, 0x4c, 0xfb, 0xf7, 0x2f, 0xcd, 0xc5, 0x89, 0xd3, 0x7c, 0x41, 0xf7, 0xb0,
	0x8c, 0xa0, 0x34, 0xea, 0x20, 0x8c, 0x05, 0x9c, 0x8a, 0xae, 0x2a, 0x16, 0x71, 0xf4, 0xbc, 0x8c,
	0x25, 0xdd, 0x42, 0xfe, 0xa2, 0x54, 0xad, 0x9b, 0x7f, 0x97, 0xd0, 0x1d, 0x2c, 0x63, 0x4b, 0x18,
	0x37, 0xac, 0xcd, 0x8e, 0xd7, 0xe6, 0x70, 0xb6, 0x67, 0x23, 0x61, 0x10, 0x11, 0x9c, 0xfb, 0x32,
	0x40, 0x08, 0x93, 0x9a, 0x8d, 0x35, 0x30, 0xde, 0x2c, 0x4a, 0xf7, 0x7f, 0xfc, 0xc9, 0xe0, 0x62,
	0xcf, 0xe6, 0xcd, 0xf2, 0xaf, 0xdc, 0xf6, 0x9f, 0x15, 0xe3, 0x0e, 0x66, 0xde, 0x3d, 0xae, 0xfc,
	0x3d, 0xb6, 0xc9, 0x15, 0xd6, 0xd7, 0x7f, 0x54, 0x3f, 0x9e, 0x46, 0x16, 0xf4, 0x3e, 0x07, 0x30,
	0x49, 0x36, 0x80, 0x69, 0x18, 0x1a, 0xe1, 0x03, 0x4c, 0xac, 0x53, 0xc4, 0xd0, 0x70, 0x94, 0x62,
	0x7d, 0x95, 0x68, 0x11, 0xf9, 0x98, 0x39, 0xf5, 0xe9, 0x37, 0x00, 0x00, 0xff, 0xff, 0x49, 0x1d,
	0xec, 0xdc, 0xb5, 0x01, 0x00, 0x00,
}
